from __future__ import print_function
from morsedict import morsedict
import sys

#assert all(morsedict.values().count(v) == 1 for v in morsedict.values())
assert all('s' not in v.lstrip('s') for v in morsedict.values())

maxlen = max(len(v.strip('s')) for v in morsedict.values())
num_tables = max(v.count('s') for v in morsedict.values()) + 1

print('maxlen:', maxlen, file=sys.stderr)
print('2**maxlen:', 2**maxlen, file=sys.stderr)

tablelen = 2**(maxlen+1)
tables = [['\xff'] * tablelen for i in range(num_tables)]

initial_stride = 2 ** (maxlen)

for key, value in sorted(morsedict.items()):
    table = tables[value.count('s')]
    stride = initial_stride
    offset = 0
    for c in value.strip('s'):
        if c == '-':
            offset += stride
        offset += 1
        stride //= 2
    print(key if ord(key) >= 32 else repr(key), value, offset, file=sys.stderr)
    assert table[offset] == '\xff'
    table[offset] = key


print('// Generated by makelookup.py')
print('const int initial_stride = %s;' % initial_stride)
print('const int num_tables = %s;' % num_tables)
print('const char morselookup[%s][%s] = {' % (num_tables, tablelen))
for table in tables:
    print('    "', end='')
    print(''.join(c if 32 <= ord(c) < 127 else '\\' + hex(ord(c))[1:]
                  for c in table), end='')
    print('",')
print('};')
